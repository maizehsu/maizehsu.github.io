{"posts":[{"title":"Maize 的小站 v1.0 发布 🎉","text":"Date: 2022.8.20 Maize’s Blog finally reaches v1.0 🎉🎉🎉 第一次有搭建个人网站的想法是在 8.12 晚上。一是希望通过图文的形式记录自己即时的想法，给值得留住的回忆存一份快照。二是以个人博客作为平台，不仅能绕过国内的审核机制畅所欲言，更是与愿意和我互动的朋友们保持长期联系的一种方式。最近一周从零开始的建站离不开你们，也欢迎未来光临的朋友们留下宝贵的建议，帮助小站走向更好！ ChangelogThese features have been implemented in v1.0: User Experience 优化文章页面阅读体验 页面两栏布局 整文章卡片宽度 文章目录组件悬浮 优化首页视觉体验 增加文章卡片：cover image + 简介 优化文章卡片：添加 tag 增加夜间模式 夜间模式背景星空动画 移动端夜间模式适配 Layout 设计网站 favicon 重新设计左下角页脚排版 版本号信息 站点访问统计 问候语 重新设计滚动条样式 鼠标悬浮卡片淡出效果 白天和夜间模式下首页 tag 配色更改 Function 自定义域名 Https 安全加密 Email RSS 订阅 Blog 更新 评论功能：绑定 Github Issue 文章置顶功能，即公告栏 个人 Profile 栏 主页链接 Email me CV 下载 规范文章路由 RoadmapThese features are to be implemented in the future: 小站留言板 增加许可协议 creative commons license 一键生成文章分享卡片 爬取豆瓣书单，片单信息，Goodreads 书单信息 Add Giscus for comment system and migrate previous comments from github issue to discussion dynamic theme changing direct and recursive reply to comments emoji reply to articles 部署 atag-player 代替外链音乐 图床托管在 github 服务器，在国内浏览需要 VPN ：后续配置 CDN 加速 增加配置项：文章加密 IssueThese issues remain after v1.0: About 页面尚未部署 未配置 Namecheap DNS Record 夜间模式下 email subscribe icon 在点击输入框后颜色显示偏暗 夜间模式下首页文章标题显示链接下划线 评论系统不支持动态切换主题 文章点击数量统计错误显示为所有文章总量 致谢感谢 @MaryBioinfo 和 Wendy同学 给予宝贵的用户体验反馈，并提出许多超棒的改进需求！小站从零走向 v1.0 离不开你们！","link":"/2022/08/20/13-v1-0-changelog-roadmap-acknowledgement/"},{"title":"Hexo Icarus (2) | Bulma notes for future blog layouts","text":"前言这两天做小站 feature 的时候大致研究了下 Icarus 主题源码，从 ../include/style/base.styl 中了解到 Icarus 用了 Bulma 作为前端框架。Bulma 本质上是一个一万多行的 css 文件。因此，若是想让博客中出现 markdown 语法支持之外的 rich-text or responsive 的功能，需要 refer to Icarus 引入的 Bulma class （Icarus 自己 oveeride 了一些 Bulma class，并不是全部引入）。本文整理了一些以后可能用到的排版，也贴上了相应的 html 代码方便调用。更多相关用法请见 Bulma 文档 。 Modifier SyntaxMost Bulma elements have alternative styles. To apply them, you only need to append one of the modifier classes. They all start with is- or has-. Let’s start with a simple button that uses the “button” CSS class: Button example.html >folded1&lt;button class=&quot;button&quot;&gt; Button &lt;/button&gt; You can use one of the 5 main colors: link info success warning danger example.html >folded1234567&lt;div class=&quot;buttons&quot;&gt; &lt;button class=&quot;button is-link&quot;&gt; link &lt;/button&gt; &lt;button class=&quot;button is-info&quot;&gt; info &lt;/button&gt; &lt;button class=&quot;button is-success&quot;&gt; success &lt;/button&gt; &lt;button class=&quot;button is-warning&quot;&gt; warning &lt;/button&gt; &lt;button class=&quot;button is-danger&quot;&gt; danger &lt;/button&gt;&lt;/div&gt; You can also alter the size: small normal medium large example.html >folded123456&lt;div class=&quot;buttons&quot;&gt; &lt;button class=&quot;button is-small&quot;&gt; small &lt;/button&gt; &lt;button class=&quot;button&quot;&gt; normal &lt;/button&gt; &lt;button class=&quot;button is-medium&quot;&gt; medium &lt;/button&gt; &lt;button class=&quot;button is-large&quot;&gt; large &lt;/button&gt;&lt;/div&gt; Or the style or state: outlined loading disabled example.html >folded12345&lt;div class=&quot;buttons&quot;&gt; &lt;button class=&quot;button is-primary is-outlined&quot;&gt; outlined &lt;/button&gt; &lt;button class=&quot;button is-loading&quot;&gt; loading &lt;/button&gt; &lt;button class=&quot;button&quot; disabled&gt; disabled &lt;/button&gt;&lt;/div&gt; As a result, it’s very easy to combine modifiers: Button Button Button example.html >folded12345&lt;div class=&quot;buttons&quot;&gt; &lt;button class=&quot;button is-primary is-small&quot; disabled&gt; Button &lt;/button&gt; &lt;button class=&quot;button is-info is-loading&quot;&gt; Button &lt;/button&gt; &lt;button class=&quot;button is-danger is-outlined is-large&quot;&gt; Button &lt;/button&gt;&lt;/div&gt; ElementsClickable Button给按钮添加点击事件。点击下面的按钮获取问好👇 Click me to greet 👆点击获取问好 function myFunction() { document.getElementById(\"demo\").innerHTML = \"Hi there 👋\"; } example.html >folded1234567&lt;button class=&quot;button is-primary is-large&quot; onclick=&quot;myFunction()&quot;&gt; Click me to greet &lt;/button&gt;&lt;blockquote id=&quot;demo&quot;&gt;&lt;/blockquote&gt;&lt;script&gt; function myFunction() { document.getElementById(&quot;demo&quot;).innerHTML = &quot;Hi there 👋&quot;; }&lt;/script&gt; BoxA white box to contain other elements, such as sign in forms: Email Password Sign in example.html >folded1234567891011121314151617&lt;form class=&quot;box&quot;&gt; &lt;div class=&quot;field&quot;&gt; &lt;label class=&quot;label&quot;&gt; Email &lt;/label&gt; &lt;div class=&quot;control&quot;&gt; &lt;input class=&quot;input&quot; type=&quot;email&quot; placeholder=&quot;e.g. alex@example.com&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;field&quot;&gt; &lt;label class=&quot;label&quot;&gt; Password &lt;/label&gt; &lt;div class=&quot;control&quot;&gt; &lt;input class=&quot;input&quot; type=&quot;password&quot; placeholder=&quot;********&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;button class=&quot;button is-primary&quot;&gt; Sign in &lt;/button&gt;&lt;/form&gt; or a name card: John Smith @johnsmith 31m Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean efficitur sit amet massa fringilla egestas. Nullam condimentum luctus turpis. example.html >folded12345678910111213141516171819202122232425262728293031323334353637&lt;div class=&quot;box&quot;&gt; &lt;article class=&quot;media&quot;&gt; &lt;div class=&quot;media-left&quot;&gt; &lt;figure class=&quot;image is-64x64&quot;&gt; &lt;img src=&quot;https://bulma.io/images/placeholders/128x128.png&quot; alt=&quot;Image&quot;&gt; &lt;/figure&gt; &lt;/div&gt; &lt;div class=&quot;media-content&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;p&gt; &lt;strong&gt;John Smith&lt;/strong&gt; &lt;small&gt;@johnsmith&lt;/small&gt; &lt;small&gt;31m&lt;/small&gt; &lt;br&gt; Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean efficitur sit amet massa fringilla egestas. Nullam condimentum luctus turpis. &lt;/p&gt; &lt;/div&gt; &lt;nav class=&quot;level is-mobile&quot;&gt; &lt;div class=&quot;level-left&quot;&gt; &lt;a class=&quot;level-item&quot; aria-label=&quot;reply&quot;&gt; &lt;span class=&quot;icon is-small&quot;&gt; &lt;i class=&quot;fas fa-reply&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; &lt;/span&gt; &lt;/a&gt; &lt;a class=&quot;level-item&quot; aria-label=&quot;retweet&quot;&gt; &lt;span class=&quot;icon is-small&quot;&gt; &lt;i class=&quot;fas fa-retweet&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; &lt;/span&gt; &lt;/a&gt; &lt;a class=&quot;level-item&quot; aria-label=&quot;like&quot;&gt; &lt;span class=&quot;icon is-small&quot;&gt; &lt;i class=&quot;fas fa-heart&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; &lt;/span&gt; &lt;/a&gt; &lt;/div&gt; &lt;/nav&gt; &lt;/div&gt; &lt;/article&gt;&lt;/div&gt; Ordered lists alternativesOrdered lists &lt;ol&gt; support different types of items markers. To modify them, use either: the corresponding HTML attribute value one of the following CSS modifier classes: is-lower-alpha, is-lower-roman, is-upper-alpha or is-upper-roman Coffee Tea Milk Coffee Tea Milk Coffee Tea Milk Coffee Tea Milk example.html >folded12345678910111213141516171819202122&lt;div class=&quot;content&quot;&gt; &lt;ol class=&quot;is-lower-alpha&quot;&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Tea&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt; &lt;/ol&gt; &lt;ol class=&quot;is-lower-roman&quot;&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Tea&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt; &lt;/ol&gt; &lt;ol class=&quot;is-upper-alpha&quot;&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Tea&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt; &lt;/ol&gt; &lt;ol class=&quot;is-upper-roman&quot;&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Tea&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt; &lt;/ol&gt;&lt;/div&gt; delete buttonThe delete element is a stand-alone element that can be used in different contexts. example.html >folded1234&lt;button class=&quot;delete is-small&quot;&gt;&lt;/button&gt;&lt;button class=&quot;delete&quot;&gt;&lt;/button&gt;&lt;button class=&quot;delete is-medium&quot;&gt;&lt;/button&gt;&lt;button class=&quot;delete is-large&quot;&gt;&lt;/button&gt; Bulma uses it for the tags, the notifications, and the messages: Hello World Lorem ipsum dolor sit amet, consectetur adipiscing elit lorem ipsum dolor sit amet, consectetur adipiscing elit Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque risus mi, tempus quis placerat ut, porta nec nulla. Vestibulum rhoncus ac ex sit amet fringilla. Nullam gravida purus diam, et dictum felis venenatis efficitur. Aenean ac eleifend lacus, in mollis lectus. Donec sodales, arcu et sollicitudin porttitor, tortor urna tempor ligula, id porttitor mi magna a neque. Donec dui urna, vehicula et sem eget, facilisis sodales sem. example.html >folded123456789101112131415161718192021&lt;div class=&quot;block&quot;&gt; &lt;span class=&quot;tag is-success&quot;&gt; Hello World &lt;button class=&quot;delete is-small&quot;&gt;&lt;/button&gt; &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;notification is-danger&quot;&gt; &lt;button class=&quot;delete&quot;&gt;&lt;/button&gt; Lorem ipsum dolor sit amet, consectetur adipiscing elit lorem ipsum dolor sit amet, consectetur adipiscing elit&lt;/div&gt;&lt;article class=&quot;message is-info&quot;&gt; &lt;div class=&quot;message-header&quot;&gt; Info &lt;button class=&quot;delete&quot;&gt;&lt;/button&gt; &lt;/div&gt; &lt;div class=&quot;message-body&quot;&gt; Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque risus mi, tempus quis placerat ut, porta nec nulla. Vestibulum rhoncus ac ex sit amet fringilla. Nullam gravida purus diam, et dictum felis venenatis efficitur. Aenean ac eleifend lacus, in mollis lectus. Donec sodales, arcu et sollicitudin porttitor, tortor urna tempor ligula, id porttitor mi magna a neque. Donec dui urna, vehicula et sem eget, facilisis sodales sem. &lt;/div&gt;&lt;/article&gt; Font Awesome container example.html >folded123&lt;span class=&quot;bulma-fa-mixin&quot;&gt; &lt;i class=&quot;fas fa-thumbs-up&quot;&gt;&lt;/i&gt;&lt;/span&gt; 未完待续这篇文章要做的内容有些多，未完待更 …","link":"/2022/08/20/14-bulma-notes-for-future-blog-layouts/"},{"title":"西部世界 | 探寻自由意志的技术悲观主义内核佳作","text":"—— Westworld S04E08 个人解读 西部世界第四季完结了，标志着又一代 HBO 神剧的没落。为什么说又？权力的游戏第八季那烂得震撼人心之感还在心头挥之不去呢。2 DB 之后又去祸害星战系列，三体系列，能不能给我爬啊！！ 诺兰夫妇在第三季放手托管，由编剧转成监制之后，WW 系列整体质量下滑不少。当然说 WW S4 烂到 GOT S8 那个程度，也是有些偏颇了。整体观感下来，虽然没做到一二季那样主题，剧情，角色三者兼顾，但能看出编剧尽力想通过套用前两季的一些成功元素，比如漂亮但空虚的循环故事，来拔高深度。可惜丢了剧情逻辑，把一些原本立体丰满的角色草草杀青了，不能说是不可惜。Nevertheless，季终集结合前两季编剧想表达的精神内核，能挖出来聊聊的点还是很多的。 下面正文开始 👇 片头聊西部世界绕不开片头。我们来总结一下一到四季片头中的变量和不变量 不变量 用于打印接待员身体的 3D 打印机 每季片头都有这样的接待员身体打印机，强调 Host 由人类创造，和人类是 creator 和 creation 的关系。德妹常常挂在嘴边的一句话 We are the reflections of the people who made us 正是在说这件事情。尽管 Host 在生理和智力上比 Human 更加 superior ，他们在觉醒之后却依旧受到人类情感，欲望的制约。这段在 S4 中有很多不错的呼应，多体现在接待员受人类影响之后，对人类意志的继承上，之后在威廉的角色分析里展开聊。 自动钢琴 西部世界园区中的自动钢琴，是从第一季开始就频繁出现在 WW 系列中的意向。打孔的乐谱象征着人类为接待员撰写的 Storyline ，自动钢琴象征着 Host 本身，看似没有人操控他们，实际说的每一句话，每一个举动都 being programmed beforehead 。琴谱上的乐章由钢琴重复播放，象征着接待员们日复一日重复着自己的 Storyline。 上图出自 S01E02 在梅芙的酒吧。伴随着经典的甜水镇 theme song，上演 Maeve 和 Hector 两人的故事线，也就是他们的 loop。前奏轻快的钢琴和沙锤声是梅芙和克莱门汀在酒吧的打趣闲聊，之后弦乐的加入，预示着 Hector 和蛇女的到来，增添了几分危机感，最后再回归纯钢琴，淡出。曲子放这了👇，边听边读，俨然有身临其境之感。国内的话记得开港澳台之外的梯子节点。 Ramin Djawadi · Sweetwater 片头的钢琴起初由一双接待员的手弹奏，再次切回这段时，接待员的双手放开，钢琴声自动响起，象征着自我意识的觉醒，自己谱写自己生命的乐章。弹得当然就是片头曲 Westworld Theme Song，你永远可以相信 Ramin Djawadi 的作曲以及编曲水平。 变量 动物第一季：Host 骑着 🐎；第二季：野牛 🐂，第三季：鹰 🦅；第四季：苍蝇。 想不通第四季放个苍蝇的意向是什么。大概想强调控制吧，毕竟第四季一大重要设定是接待员利用苍蝇作为病毒载体感染并控制人类。但 WW 系列的主题从来都不是控制本身，而是打破控制，寻找自由意志。从这个角度看，前三季的动物是符合 spirit 的，第四季选的苍蝇个人并不满意。 场景每一季的片头曲中会放一些和本季重要剧情相对应的场景。本季的关键词是笼子，焚烧，Delos 永生实验舱和苍蝇眼睛。一个个不同的个体（大概是人类吧）被困在自己圆柱形牢笼内，试图打破逃出而不得，最终被焚烧其中。 这个过程跟 S2 中 Delos 的永生实验很像，同样圆柱形的实验舱，实验体被困其中，而实验失败后实验体便会被牢笼中的火焰吞噬。而是否通过永生实验的条件是Fidelity ，即能否改变，打破循环，做出与之前 version 的自己不一样决定。剧中对人类自由意志是悲观的。正如威廉的女儿在 S2 季终彩蛋对威廉说的 Every choice of yours leads to this situation.，WW 认为人类很难做出改变，（人类)无论被赋予多少次机会，依旧难以做出改变，找到自由意志。 有意思的是，最后展示的 big picture ，许多个实验舱合在一起，组成了很像是苍蝇复眼的场景，算是一个对照吧。 Que Sera SeraS04E08 的标题 Que Sera Sera ，英文是 Whatever will be, will be ，中文 顺其自热，原曲是阿尔弗雷德 · 希区柯克的电影《擒凶记》中的女主角 Dorris Day 钢琴弹唱。在剧中父女俩一起哼唱了这首歌， 不过我个人第一次听这首歌是年初在惊悚美剧 From 梦魇绝阵 ，于是当 Caleb 父女哼唱这首歌的时候，属实有些跳戏。From 的片头附在这了，氛围营造的不错。希望大家看完后去补西部世界都能体会到我当时的毛骨悚然感。: ) 这并不是第一次西部世界用到经典音乐作品，S02E08 把 Nirvanna 的 Heart Shaped Box 改编成了钢琴抒情版，至今还记得当时认出主旋律时内心的震撼。S03E04 的逛窑子神曲，爵士版 Wicked Game by the Weekend，本季开头古典弦乐版 Video Games by Lana Del Rey … ，不胜枚举。之后有空余时间会单独开一篇聊聊西部世界中的音乐，届时再结合场景细说。 德洛丽丝和泰迪：可望不可及的神仙爱情德妹是西部世界当之无愧的大女主。若用一句话概括她的 character image ，那便是 I choose to see the beauty 。 第一季第二季的德妹是两面性的。光明面的德妹一直能看到世界的 beauty，黑暗面的德妹代号 Wyat，内心更多由之前受到的压迫和仇恨驱动，带来的是两个族群的毁灭。不过好在德妹有阳光大男孩泰迪，正如每位成功的女人背后都离不开善良朴实默默支持她的男人。 泰迪离开了德妹，便有了德妹第二季屠杀其他接待员时的 gone too far，因而最后泰迪以死明志，最终把德妹从仇恨的边缘拉回。德妹需要泰迪来 pull her back，需要泰迪唤醒自己心中的美好与善。这种关系像是黑袍纠察队中的 Butcher 和弟弟，或是星战中的安纳金和帕德梅，GOT 中的丹妮莉丝和小恶魔。能够成为唯一 hold you back 的人一定是至亲至爱，毕生能有如此之人，便是大幸。 德妹和泰迪互为 cornerstone，真的磕死。当两个人的爱情发展到只有和对方在一起才能 be the best of their selves ，彼此以对方为核心驱动力，那是人间理想了。 德妹的故事还有一个关键词：找寻。德妹用整个第一季觉醒，找寻自己存在的意义。第二季失去了父亲，泰迪，战友，差点走向黑暗，但最终把路走通，真正长大。第三季按照 grand plan 牺牲自己解放全人类。第四季看到又回归单纯的德妹，真的有种看女儿长大的感觉。单纯的德妹很能让人 relate to 。毕竟，**we are all little girls searching for meanings of life **。 夏洛丽丝：异体同心夏洛丽丝是第三季德妹的分身，剧组借鉴了来源佛教的一个概念 Itai doshin ，即 Many in Body, One in Mind 。第三季把这个概念玩的飞起，当时 S3E04 Mother of Exile plot reveal 的时候引发了一波社交媒体热潮。而每个德妹的分身也受自己人类躯壳性格的影响，遂有了夏洛丽丝承受不了德妹的弃子安排，堕入黑暗。 夏洛丽丝也是德妹没有泰迪 Hold Back ，因仇恨失去理智走向极端的一面。不过很令人遗憾的是，第四季只字未提第三季遗留的四个德妹分身，等了一整季上季德妹分身的下落，最后大结局草草收尾。大概是剧组打的安全牌吧，毕竟还不知道能不能有第五季，不敢玩太大。 另一个角度看夏洛特和她手中的 Host，则是接待员难以跳脱出人性 flaw 的代表。夏洛丽丝以控制，报复人类为乐，她手下的 host 同样对猎杀人类乐此不疲。那么这样一来接待员和两季前的人类没什么两样了，有种屠龙少年终成恶龙的感觉。 接待员想要成为比人类更加 civlized，advanced being，必须学会放弃人类的欲望。 威廉：人性的纯粹之恶William 是 WW 系列中人物塑造最丰满的人类角色。威廉开局没钱没身份，靠读书认识了未来的妻子，在国内我们叫这样的人小镇做题家。但和国内不同的是，威廉居然奋斗出头了，娶了大富豪 Delos 家的闺女，获得一次和大舅子去乐园度假的机会。初到乐园的他是个傻白甜，连看门妹子都不敢占便宜，但和德妹相处的经历改变了他。看透”本质“的威廉设计害了小舅子，用一个复杂计划证明了自己，既挽救了当时濒临破产的西部世界园区，又 impress 了迪洛斯家的老爷子，取代小舅子继承了公司和亿万家产，又一个爽文男主。 那么究竟是什么改变了老好人威廉呢？在第一季和第二季中分别有两个 character defining moment。S1 季初的威廉对德妹一见钟情，百般爱护，在经历千般冒险之后和德妹走散，再见时德妹已经被重置，先前培养的种种共同记忆清零。S2 季中威廉成为黑衣人之后，遇到了因母亲自杀去世想来找自己问清楚的女儿。威廉本不想把女儿卷进自己的世界，但在恍惚中把女儿认作是乐园里的接待员，情急之下误杀。 所以 S04E07 中把威廉选为大 Boss ，让他来担任两个种族共同的敌人，这个选择我是满意的。威廉是虚无主义的代表，和德妹的经历告诉他 nothing lasts forever ，亲手杀死女儿又让他失去了对尘世最后的留恋。威廉是人性中的 pure evil 的代表，正是这样毫无牵挂，只有血腥和杀戮能给他的情绪带来一些波动的人，才能担当灭绝人类和接待员两族之大任。 前面说到接待员对于人类意志的继承，S4 中接待员威廉心里是夏洛丽丝的 copy，但最终却继承了威廉的的 spirit。剧中解释是用了谁的 body，便不可避免受这个 body 主人性格的影响，自然无可厚非。我以为可以和第二季 Delos 的永生计划联系起来思考。把人类的心智装在 Host 身体永远无法兼容，同样把 Host 心智装在人类身体也会逐渐被身体原来的主人 take over，无法活出自己。大抵是想表达人类和接待员终究是两个物种，人类想通过接待员身体实现永生，或是接待员想通过假扮人类统治世界，在宏观尺度上都是 cross boundary 的行为。各走各的路，才能各自安好。 不过这个理论有个 exception，便是 WW 世界中和福特比肩的重量级人物 Bernard，我们下一节说。 伯纳德：The key to everything伯纳德的起源故事很有意思。他是西部世界联合创始人 Arnold 的接待员版本，但不同于其他失败的人类接待员是通过采集 Behavioral Data 来还原心智，Bernard 是通过德妹的记忆一言一举还原的。为什么德妹的记忆这么靠谱呢？因为 Arnold 在儿子去世之后全身心的投入一代接待员的开发之中，而德妹作为初代机，和当时的 Arnold 朝夕相处。所以 Bernard 的心智球是红黑相间的，红色代表人类，黑色代表接待员。伯纳德是人类和接待员共存的现身代表。 伯纳德和德妹是决定两个族群未来的两个重要角色。伯纳德的代号是 The Passenger （S2E10 标题），德妹则是 The Storyteller （S4E7 德妹用户名）。伯纳德哪都去过，是联系 host、human、sublime 的桥梁，因此是 passenger。而德妹第二季读取了乐园里所有游客的 data，第四季又读取了全世界人类的 data。两个族群的过去，现在和未来都在德妹脑子里，因此是 story teller 。 我原以为 Bernard 会是编剧深挖的重点的，没想到最后给伯纳德分配的作用居然就是录个视频放把枪。这是我觉得第四季最令人失望的地方了，不仅逻辑接不上，还搭进去了一个前两季塑造如此成功的角色。 先知谁都能当，把泰迪从虚拟世界拉出来也能做这个工作。而伯纳德和其他任何人类或接待员不一样的地方正是在他身为 Host，core drive 却是 for the good of human kind 。他为 Delos 永生计划提供了 alternative 思路。从他的身上才能看见两个种族和平相处的希望，he is the key to everything 。 可惜第三第四季的编剧 is not even close from seeing 这些之前铺垫好的角色价值。 梅芙：The most human host如果说德妹和伯纳德（还有前两季的 Akecheta）在 WW 中的角色定位是 savior，是亦或掀竿革命，亦或普渡众生的大家角色，梅芙的角色定位则一直是小家。所以一直以来我们最能和梅芙产生共情，因为她的 character core drive 是亲情，是对女儿的爱。梅芙的另一大特点是有情有义，很像是东方文化里的侠客。第二季特地给她安排了一个日本文化版的 counterpart，也是对她这样形象的 reinforcement。 第一季季末，当梅芙杀出重围，有了逃出 WW，去往人类世界的机会时，发现这一切依旧是 Ford 在背后给她设定好的故事线，甚至包括她对女儿的牵挂。然而历经千难万险，在自己有了选择，freedom and love 之前，她毅然选择了 love。第四季，一句答应为小粉照顾女儿，便是跨越三十年的承诺，以命相许。 In the end，很多 post-apocalyptic 作品给出 the solution to saving humanity 很简单，all we need is love。 夹个私货👆。有着对家庭的执念，说到做到，有情有义的侠客 Maeve ，怎能让人不爱。 小粉和女儿：星际穿越般的父女情聊小粉和女儿之前，得先搞清楚他们的角色定位，毕竟是第三第四季引入的新角色。小粉和威廉是到第三季主角团唯二幸存的人类。小粉和威廉完全相反，他是 Outliers 的代表，代表对宿命论的反抗和人性中的善（参见他在第三季军营中的回忆线）。而第四季引入小粉和女儿则是人类这边纯朴亲情的代表。 西部世界主角团真实人均宝贝女儿哈，夏洛丽丝和女儿，梅芙和女儿，威廉和女儿，小粉和女儿，伯纳德和 … 终于是儿子了。主角团下一代的遭遇往往都是主角们的 character defining moment。前面说了小粉和威廉是人类希望和毁灭的代表，这里还有一个有趣的 compare and comparison。Frankie 和接待员版本的小粉见面对应威廉和（他以为是接待员实际是人类的）女儿见面。同样是几十年杀戮，以及和 Host 势不两立的恨，Frankie 选择接纳父亲，给接待员版本的父亲一个救赎自己，完成几十年前原版小粉的未竟之志的机会。而威廉则沉浸于杀戮带来的嗜血快感，亲情已经无法救赎他。所以你看，WW 系列固然对人类悲观，但也偷偷藏了不少希望。 因此，小粉和女儿的角色设定把 WW 系列从对人类完全悲观的极端往回拉了一些。在充满血腥暴力的剧中，有这样的温情，我认为是很有必要的。另外这季 Frankie 的演员演的也特别棒，父女重逢这场戏两人互飙演技，爱了爱 了。 锤哥：永远的陪跑锤大哥也是一个很有趣的角色，一开始以人类身份出场，第二季最后揭示他一直以来都是福特安插的间谍。不过和其他 Host 不一样的是，他作为同样没有觉醒（至少在第二季末）的 Host， 一开始就知道自己是接待员，也知道自己的 core drive 是 for the good of his own kind。本身他的觉醒是一个值得挖掘的点，可惜直到第四季他都还只是一个工具人。 四季以来一直是人是 Host 都在秀，只有锤哥在挨揍。这张高光后的20s，陪伴咱们四季的锤大哥也草率下线了。编剧真的无脑发盒饭。无能狂怒。 最后纵观 WW 系列四季， 第一季讲接待员意识的觉醒。接待员也可以有自我意识。这首先否定了人类作为唯一有思想的高等物种的独一无二性。消解了人之为人的独一无二性后，作为 creation 代表德妹一枪崩了作为 creator 代表福特，是对 technology 高速发展丧失敬畏，盲目乐观的人们的一记重击。 第二季讲的是高等物种（Both human and host）在面临 survival 下的不同选择和分化。在生存的危机下，接待员分成两派。平和一派走向了 sublime，去往虚拟世界的极乐天堂，激进一派则是去往人类世界，就此开始人类和接待员共存的时代。人类一派如威廉向虚无主义的道路走远，夏洛特则是对 technology 失去敬畏的代表。他们都在第二季的生存竞赛中输得很彻底。 第三季讲宿命和对既定宿命的反抗。即使所有人都按照人工智能规划好的路线生活，社会依旧做不到长久安稳。这个概念来自于上世纪一本书 Entropy: A New World View，书的宗旨贴下面了👇，完美解释了第三季 The authors seek to analyse the world’s economic and social structures by using the second law of thermodynamics, that is, the law of entropy. The authors argue that humanity is wasting resources at an increasing rate, and that will lead to the destruction of our civilization, which has happened before on a smaller scale for past empires. 一句话版：有限的地球资源 + 快速发展 = 熵增，即混乱程度的上升，there’s nothing you can do to change that。 第四季讲走向极端的接待员和之前的人类半斤八两，依旧以猎杀人类为乐。人性中生来的恶是原罪，对于控制和权力的渴求 is non-stopping，这便是技术悲观主义的一种解读：我们的 creation 身上带有我们的 flaw，他们也无法 save humanity from extinction。所以第四季结尾把一半的希望寄托给了少数的 outliers，能够拯救人类的还得是人类文明自己。 所以科幻片的内核永远是人文，没有任何科幻片是以技术硬核，特效标榜成为佳作的。剧中的接待员和人早已没啥两样了。西部世界 has little to do with AI，but has everything to do with 人、社会、亲情、爱。我非常喜欢 George R R Martin 在一次采访中引用的一句话 The only thing worth writing about is the human heart in conflict with itself. 而 WW S1、S2 正是抓住了这一点，成功地塑造了一批立体，有血有肉的人物，讲了两段环环相扣，惊心动魄的故事（福特死前和死后）。There is still so much to talk about 。这里挖个坑，待三刷 S1、S2 之时把德妹，威廉，以及其他 Character Arc 丰满的人物成长路线单独拿出来聊聊。希望哪怕不喜欢科幻标签的朋友们也能吃上安利，补上这部剧，大家一起畅聊自己的解读。 编剧给第五季挖了个大坑，认为拯救一切的 key 在于德妹和德妹脑子里全人类的数据，需要跑 some kind of test 来拯救两个种族的未来。我看就是为了下一季软重启回到西部世界吃老本讨好粉丝。 是个很新颖的角度，值得展望一下，不过本文篇幅原因，先不展开了。我还是一直坚持 Bernard 才是 the key to everything，不过看 s04e07 分给 Bernard 的时长，应该是领盒饭了，实在令人叹息。 截至目前，HBO 还没宣布续订，看样子有凉在第四季的趋势。不过 a part of me 还是希望无论多烂，编剧也把这段传奇故事收个尾，起码对得起当年诺兰夫妇开的好头，对得起我们这些剧迷花这么多时间琢磨剧情，隐喻，补背景知识，看德妹成长。WW 五季续订时，定勿忘回评论区👇烧香。","link":"/2022/08/18/12-westworld-s4-finale-review/"},{"title":"Linux setup (2) | For vm ware","text":"Setup 安装vmware_tools，用vmware安装路径下的linux.iso作为光盘启动，解压并安装 sudo ./vmware-install.pl 查看共享文件夹 vmware-hgfsclient 如果mnt下没有文件夹，请用这个命令进行挂载 sudo vmhgfs-fuse .host:/ /mnt/ -o nonempty -o allow_other 换源 12345cat /proc/version # Check versionsudo apt install vim # Install vimsudo vim /etc/apt/sources.listsudo apt update # Update Systemsudo apt upgrade Environment Essential Packages sudo apt install build-essential net-tools cmake git Chinese Input Update system to ubuntu 20.10 then install fcitx5 Config git and ssh Install ssh service: `sudo apt install openssh-client openssh-server`` sudo service ssh restart ssh-keygen Upload to github and check with ssh -T git@github.com zsh sudo apt install zsh git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc chsh -s /bin/zsh reboot Go to ~/.zshrc and personalize yourself Theme Install gnome sudo apt-get install -y gnome-tweaks gnome-shell-extensions gnome-tweak-tool Uninstall ubuntu dock sudo apt-get autoremove --purge gnome-shell-extension-ubuntu-dock -y Download dash to dock wget https://extensions.gnome.org/review/download/12397.shell-extension.zip Unzip to folder dash-to-dock@micxgx.gmail.com and move to 12mkdir .local/share/gnome-shell/extensions/mv dash-to-dock@micxgx.gmail.com .local/share/gnome-shell/extensions/ then open tweak and turn on Application menu, Dash to dok and Desktop icons. Reboot. Download theme and icon package 12345678910wget https://github.com/vinceliuice/vimix-gtk-themes/archive/master.zipwget https://github.com/vinceliuice/vimix-icon-theme/archive/master.zipunzip vimix-gtk-themes-master.zipunzip vimix-icon-theme-master.zipsudo mv vimix-gtk-themes-master /usr/share/themes/sudo mv vimix-icon-theme-master /usr/share/icons/cd /usr/share/themes/vimix-gtk-themes-master/./install.shcd /usr/share/icons/vimix-icon-theme-master/./install.sh Reboot Apps Monitor system resources usage sudo apt install indicator-multiload Display matrix rain sudo apt install cmatrix Vscode sudo install snap &amp; snap install code","link":"/2022/08/15/11-ubuntu-setup-for-vm/"},{"title":"Linux setup (1) | For virtual box","text":"How to install Ubuntu 18.04 LTS on VirtualBox1. Downloading Ubuntu image Open the Ubuntu website. Go to the official website https://www.ubuntu.com/download/desktop. You can download the Ubuntu disk image (also known as an ISO file) here. The recommended version is Ubuntu 20.04.2 LTS. 2. Install VirtualBox Download VirtualBox. Go to https://www.virtualbox.org/. The tutorial to install VirtualBox for both Windows and Mac is here https://www.wikihow.com/Install-VirtualBox 3. Create a Virtual Machine Click “New”. Click the blue badge in the upper-left corner of the VirtualBox window, which opens a pop-up menu. Enter a name for your virtual machine. Type whatever you want to name your virtual machine (e.g. ,Ubuntu) into the “Name” field. Select Linux as the “Type” value. Expand the “Type” drop-down menu and select Linux. Select Ubuntu as the “Version” value. Make sure Ubuntu (64-bit) is selected in the “Version” drop-down menu. Click “Next”. Select an amount of RAM to use. Drag the slider left or right to decrease or increase the amount of RAM that VirtualBox will have available for your Ubuntu virtual machine. The ideal amount of RAM is automatically selected when you get to this page. Make sure not to increase the RAM into the red region; keep the slider in the green region. Choose the File location and File size. We will be setting the disk type to VDI and the file size to be 40GB. It depends on the free space on your disk. You may apply the default settings. 4. Install Ubuntu in VirtualBox Double click the virtual machine “Ubuntu” and select your Ubuntu ISO. Click “Open”, then “Start”, then “Install Ubuntu”. Check both boxes on the “Preparing to install Ubuntu” page then “Continue”. This will ensure that everything Ubuntu needs to run will be installed. Check the “Erase disk and install Ubuntu” box then “Install Now”. This may sound scary, but don’t worry—nothing on your computer will be erased. Click Continue when prompted. This confirms that you understand the virtual machine’s virtual drive will be “erased” (there’s nothing on it anyway) and begins the Ubuntu installation process. 5. Setting up Ubuntu Select a time zone then “Continue”. Click a section that correlates with your position on the map. You may choose “Shanghai”. Enter your username, computer’s name and password. Wait for Ubuntu to finish installing. This process may take anywhere from a couple of minutes to half an hour depending on the performance of your computer. Restart the virtual machine and log in. Remember your password. Special thanks to VE280 SU2019 TA Group for this part of instruction Things to do after installation of Ubuntu1. Change apt source https://www.jianshu.com/p/5400722c369c https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/ To edit source.list use command sudo vim /etc/apt/sources.list For vi/vim related commands go to https://zhuanlan.zhihu.com/p/69357225 Pay attention to Linux edition 2. Update the system sudo apt update sudo apt upgrade 3. ssh setup check ssh service: ps -e | grep ssh if not installed: sudo apt install openssh-client openssh-server sudo service ssh restart ssh-keygen add the public key to ~/.ssh/authorized_ keys (note: user-specific) (note: use ifconfig -a to check the local ip address) 4. Essential packages sudo apt install build-essential net-tools cmake git 5. Link your GitHub repo to your virtual computer!6. For other essential apps sudo snap install &lt;name&gt; 7. Set full screen and definitionInstall guest additions sudo mkdir --p /media/cdrom sudo mount -t auto /dev/cdrom /media/cdrom/ cd /media/cdrom/ sudo sh VBoxLinuxAdditions.run Set screen definition xrandr -s 1920x1440 Also applicable to Ubuntu on other virtual devices (etc. VMware, docker) 8. Personalize your UbuntuInstall zsh, the most powerful shell in Linux sudo apt install zsh git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc chsh -s /bin/zsh reboot Go to ~/.zshrc and input the following 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596# Path to your oh-my-zsh installation. export ZSH=/home/.oh-my-zsh# Set name of the theme to load. Optionally, if you set this to &quot;random&quot;# it'll load a random theme each time that oh-my-zsh is loaded.# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes# zhs的ZSH_THEME=&quot;ys&quot;# Set list of themes to load# Setting this variable when ZSH_THEME=random# cause zsh load theme from this variable instead of# looking in ~/.oh-my-zsh/themes/# An empty array have no effect# ZSH_THEME_RANDOM_CANDIDATES=( &quot;robbyrussell&quot; &quot;agnoster&quot; )# Uncomment the following line to use case-sensitive completion.CASE_SENSITIVE=&quot;true&quot;# Uncomment the following line to use hyphen-insensitive completion. Case# sensitive completion must be off. _ and - will be interchangeable.HYPHEN_INSENSITIVE=&quot;true&quot;# Uncomment the following line to disable bi-weekly auto-update checks.DISABLE_AUTO_UPDATE=&quot;true&quot;# Uncomment the following line to change how often to auto-update (in days).export UPDATE_ZSH_DAYS=13# Uncomment the following line to disable colors in ls.# DISABLE_LS_COLORS=&quot;true&quot;# Uncomment the following line to disable auto-setting terminal title.# DISABLE_AUTO_TITLE=&quot;true&quot;# Uncomment the following line to enable command auto-correction.ENABLE_CORRECTION=&quot;true&quot;# Uncomment the following line to display red dots whilst waiting for completion.# COMPLETION_WAITING_DOTS=&quot;true&quot;# Uncomment the following line if you want to disable marking untracked files# under VCS as dirty. This makes repository status check for large repositories# much, much faster.DISABLE_UNTRACKED_FILES_DIRTY=&quot;true&quot;# Uncomment the following line if you want to change the command execution time# stamp shown in the history command output.# The optional three formats: &quot;mm/dd/yyyy&quot;|&quot;dd.mm.yyyy&quot;|&quot;yyyy-mm-dd&quot;# HIST_STAMPS=&quot;mm/dd/yyyy&quot;# Would you like to use another custom folder than $ZSH/custom?# ZSH_CUSTOM=/path/to/new-custom-folder# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/# Example format: plugins=(rails git textmate ruby lighthouse)# Add wisely, as too many plugins slow down shell startup.plugins=( git z zsh-autosuggestions extract web-search zsh-syntax-highlighting)source $ZSH/oh-my-zsh.sh# User configuration# export MANPATH=&quot;/usr/local/man:$MANPATH&quot;# You may need to manually set your language environment# export LANG=en_US.UTF-8# Preferred editor for local and remote sessions# if [[ -n $SSH_CONNECTION ]]; then# export EDITOR='vim'# else# export EDITOR='mvim'# fi# Compilation flagsexport ARCHFLAGS=&quot;-arch x86_64&quot;# sshexport SSH_KEY_PATH=&quot;~/.ssh/rsa_id&quot;# Set personal aliases, overriding those provided by oh-my-zsh libs,# plugins, and themes. Aliases can be placed here, though oh-my-zsh# users are encouraged to define aliases within the ZSH_CUSTOM folder.# For a full list of active aliases, run `alias`.## Example aliases# alias zshconfig=&quot;mate ~/.zshrc&quot;# alias ohmyzsh=&quot;mate ~/.oh-my-zsh&quot;#source ~/.oh-my-zsh/plugins/incr/incr.zshexport UPDATE_ZSH_DAYS=1 Select a cool theme Please refer to https://www.cnblogs.com/technology178/p/13173618.html Add Chinese and install Sogou Pinyin Please refer to https://pinyin.sogou.com/linux/help.php Some other interesting apps sudo apt install indicator-multiload used to monitor system resources usage curl wttr.in used to check weather sudo apt install figlet used to perform ascii art echo Hello World | figlet try it out sudo apt install cmatrix used to display matrix rain cmatrix","link":"/2022/08/15/10-ubuntu-setup-for-vb/"},{"title":"Bash 基础用法小记","text":"Shortcuts and Daily usage ctrl + l clears screen ctrl + a moves to the front of the command line ctrl + e moves to the back of the command line ctrl + u deletes from the cursor to the front of the line ctrl + k deletes from the cursor to the back of the line ctrl + w deletes the last word next to the cursor ctrl + c terminates the command ctrl + z suspends the command ctrl + \\ exits the command ctrl + r searches command history alt + backspace deletes the word before the cursor ctrl + shift + c does copy ctrl + shift + v does paste !! is the latest command you input $? checks the error code 123456789101112131415#!/bin/bashecho &quot;Starting program at $(date)&quot; # Date will be substitutedecho &quot;Running program $0 with $# arguments with pid $$&quot;for file in &quot;$@&quot;; do grep foobar &quot;$file&quot; &gt; /dev/null 2&gt; /dev/null # When pattern is not found, grep has exit status 1 # We redirect STDOUT and STDERR to a null register since we do not care about them if [[ $? -ne 0 ]]; then echo &quot;File $file does not have any foobar, adding one&quot; echo &quot;# foobar&quot; &gt;&gt; &quot;$file&quot; fidone usage of ? and {} 1234567891011121314151617181920212223convert image.{png,jpg}# Will expand toconvert image.png image.jpgcp /path/to/project/{foo,bar,baz}.sh /newpath# Will expand tocp /path/to/project/foo.sh /path/to/project/bar.sh /path/to/project/baz.sh /newpath# Globbing techniques can also be combinedmv *{.py,.sh} folder# Will move all *.py and *.sh filesmkdir foo bar# This creates files foo/a, foo/b, ... foo/h, bar/a, bar/b, ... bar/htouch {foo,bar}/{a..h}touch foo/x bar/y# Show differences between files in foo and bardiff &lt;(ls foo) &lt;(ls bar)# Outputs# &lt; x# ---# &gt; y Search and help history display commandline history, then apply !n to operate certain command man, help, type Some commands are defined internally in bash. 1man bash apropos search the manual page names and descriptions 1apropos KEYWORD grep Search for PATTERNS in each FILE 12grep PATTERN FILEgrep -r PATTERN FOLDER Combining programs togetherYou can also use &gt;&gt; to append to a file. Where this kind of input/output redirection really shines is in the use of pipes. The | operator lets you “chain” programs such that the output of one is the input of another: 1234missing:~$ ls -l / | tail -n1drwxr-xr-x 1 root root 4096 Jun 20 2019 varmissing:~$ curl --head --silent google.com | grep --ignore-case content-length | cut --delimiter=' ' -f2219 Become root user1sudo su and the $ will change into # For example, the brightness of your laptop’s screen is exposed through a file called brightness under 1/sys/class/backlight By writing a value into that file, we can change the screen brightness. Your first instinct might be to do something like: 123456$ sudo find -L /sys/class/backlight -maxdepth 2 -name '*brightness*'/sys/class/backlight/thinkpad_screen/brightness$ cd /sys/class/backlight/thinkpad_screen$ sudo echo 3 &gt; brightnessAn error occurred while redirecting file 'brightness'open: Permission denied This error may come as a surprise. After all, we ran the command with sudo! This is an important thing to know about the shell. Operations like |, &gt;, and &lt; are done by the shell, not by the individual program. echo and friends do not “know” about |. They just read from their input and write to their output, whatever it may be. In the case above, the shell (which is authenticated just as your user) tries to open the brightness file for writing, before setting that as sudo echo’s output, but is prevented from doing so since the shell does not run as root. Using this knowledge, we can work around this: 1$ echo 3 | sudo tee brightness Disk Usage Managereport file system disk space usage 1df -h Files Check permission ls -l Change permission chmod +x Use | and &gt; to write the “last modified” date output by semester into a file called last-modified.txt in your home directory. ls -l semester | tail -c 22 &gt; ~/last-modified.txt Output the last part of the files tail Process &amp; add &amp; to the end of a command to put it backstage jobs sees how many process are running in backstage in %jobnumber fg %jobnumber puts the backstage job to the frontstage bg %jobnumber puts the stopped backstage job to progress kill %jobnumber kills the process InternetOthers cal displays a goodlooking calendar.","link":"/2022/08/15/9-simple-notes-for-bash/"},{"title":"Simple Git Usage for GitHub and Beyond","text":"Install Gitfor Mac OS and Windows go to https://git-scm.com/ for Linux 1sudo apt-get install git Initial setupSet up id for git 12git config --global user.name &quot;Your Name&quot;git config --global user.email &quot;email@example.com&quot; UI settings 123456git config --global color.ui falsecolor.branchcolor.diffcolor.interactivecolor.statusgit config --global color.diff.meta &quot;blue black bold&quot; Generate ssh key (prefer using ssh protocol to https protocol) 1ssh-keygen -t rsa -C &quot;youremail@example.com&quot; Upload your ssh key to GitHub Simple usage of Git BashClone your repo (also used to download already existed repo) 1git clone git@github.com:Maizehsu/private.git Tips: When encountering long file names, let bash do it for you by typing first few letters then using tab pwd print working directory cd change directory cd.. go back to former directory cd /D change hardware touch create a new file mkdir create a new directory rm remove/delete a file rm -r remove/delete a directory ls -l list all visible files ls -a list all invisible files cat read a file vi/vim edit a file (will be discussed in detail later) Create a repo1234567echo &quot;# aaaa&quot; &gt;&gt; README.mdgit initgit add README.mdgit commit -m &quot;first commit&quot;git branch -M maingit remote add origin git@github.com:Maizehsu/aaaa.gitgit push -u origin main Create a local repo 1git init Link two repos 1git remote add origin git@github.com:Maizehsu/private.git First commitgit add &lt;name&gt;/--all git commit -m &quot;message&quot; git push -u origin master You may encounter git push --set-upstream origin &lt;name&gt;, to tackle simply input the command again. Later git push is enough Push an existing repository from the command line123git remote add origin git@github.com:Maizehsu/aaaa.gitgit branch -M maingit push -u origin main Delete filesDelete remote files only git rm --cached filename/-r --cached directoryname git commit -m &quot;&quot; git push Delete local files as well as remote ones git rm filename/-r directoryname git commit -m &quot;&quot; git push Set up a branchgit branch &lt;name&gt; git checkout &lt;name&gt; Other useful commandsBranch related git branch create a new branch -a, --all list both remote-tracking and local branches -d, --delete delete fully merged branch -D delete branch (even if not merged) -C copy a branch, even if target exists -l, --list list branch names --show-current show current branch name --merged &lt;commit&gt; print only branches that are merged --no-merged &lt;commit&gt; print only branches that are not merged Checkout branch 1git checkout &lt;name&gt; Or simply 1git checkout -b [yourbranchname] // Create and checkout at the same time Delete branch git branch -d localBranchName // Delete branch locally git push origin --delete remoteBranchName // Delete branch remotely Check git status 1git status Undo commit 12git reset --soft HEAD^ // Undo this commit (Cancel commit)git reset --hard HEAD^ // Restore to last commit (Cancel both commit and add) Get latest commit from remote repo 12git pull // Get then auto mergegit fetch // Get but donot merge Check recent submissions 1git log","link":"/2022/08/15/7-simple-notes-for-git/"},{"title":"二十天托福词汇冲刺 | 前缀后缀记忆法","text":"浅聊记忆中从小到大系统背单词的经历不多，很幸运地出生在一个重视英语听说的家庭。从小我便在迪士尼皮克斯动画，各种美剧的“熏陶”下长大。当别的小孩在聊奥特曼，喜羊羊时，我在家里模仿熊猫阿宝从山上一路摔下去的 woo~~ aoo~~ 声音逗父母开怀大笑。当别的朋友聊起小时候看过的爱情公寓，我在中二的 cosplay 绝地武士，梦想着有一把属于自己的光剑（现在也是喔 : ))。初中刷完了霍比特人和魔戒的原著，高中刷完了冰与火之歌七本书，自以为学生时代词汇积累够了，不过大学开始接触 GRE，还是被狠狠的打了一波脸。语言文化之类，还是应当时时积累。 Nevertheless，我认为 in terms of 提高英语水平，和读书看剧交流相比，背单词表并不是一个好的选择。前缀后缀是我觉得位数不多 单词-related方式可以积累大量词汇的方式。于是大一准备托福前期准备了这份材料。 这套二十天的 Journey 在顺序结构安排上主要参考了俞敏洪先生编著的新东方的前缀后缀书，但具体内容中填充了许多自己的理解。许多在当时是帮助自己记忆，现在若能博君一笑，也是不错。 下面我们开始吧！ Preface Prefixes ,suffixes and roots are means to GUESS the vague meanings of uncommon or academic words, enabling you to grasp the main idea of the paragraph without knowing the exact meaning of each word. In fact, same words can have slightly sometimes immensely different meanings under different contexts, so technically it’s impossible to master all of them. Learning how to deduce words when entering an unfamiliar context is critical to further advanced English Learning and is real fun as well. Here our journey begins! Part 1. Prefix Day 1 a- /ab- /an- 不，无，非 asymmetry a+symmetry(对称的) –&gt; (非对称的) abnormal ab+normal(正常的) –&gt; (不正常的) anarchism an+arch(统治)+ism(n.表主义) –&gt; (无政府主义) amoral, atypical, aperiodic, asocial, apathy, anharmonic, anonymous go ahead and check it out yourself! a- /ab-, ac-, af-, ag-, ap-, ar-, as-, at- + root with same consonants /ad- /an- 加强 abase a+base(底部) –&gt; (使…降到底部) –&gt; (降低…威信) appease ap+peace(平和) –&gt; (抚慰) administrate ad+minister(官员)+ate(表动词) –&gt; (管理，执行) annihilate an+nihil(零)+ate(表动词) –&gt; (使…清零) –&gt; (消灭) amend, amass, affirm, aggravate, associate, assimilate, affliction, adapt, annotate, annul go ahead and check it out yourself! a- 表状态 alight a+light(点燃) –&gt; (点燃的) afloat, akin go ahead and check it out yourself! ant- /anti- 相反，反对 Antarctic ant+Arctic(北极) –&gt; (南极) Antibacterial anti+bacterial(细菌的) –&gt; (抗菌的) antiwar, antonym, antidote, antisocial, antipathy go ahead and check it out yourself! ante- 前，在前 antedate ante+date(日期) –&gt; (使…提前，先于) anteroom, antetype, antecessor, antecedent, antemarital, anterior go ahead and check it out yourself! apo- 与…相关 apologue apo+log(对话)+ue(常用名词后缀)–&gt; (寓言) apotheosis go ahead and check it out yourself! Day 2 be- 使；加以，饰以 befoul be+foul(肮脏的) –&gt; (弄脏) becloud be+cloud(云) –&gt; (遮蔽) becalm, befall, befit, befool, bewilder, beguile, behold, belie, belittle, bepowder go ahead and check it out yourself! bene- 善，好 benediction bene+diction(用词) –&gt; (祝福) benevolent, benign, benefaction, benefactor, beneficent go ahead and check it out yourself! bi- /bin- 双 bilingual bi+lingual(语言) –&gt; (双语的) bicycle, biannual, bicentenary, bilateral, binocular, biped, bisexual, biweekly, biennial, bigamist, bisect go ahead and check it out yourself! by- 旁，副 bypass by+pass(小路) –&gt; (从旁边小路走) –&gt; (绕过) byproduct by+product(产品) –&gt; (副产品) byway, byroad, bystander, byword, bywork, bygone, bylaw, byline go ahead and check it out yourself! caco- 恶，不良 cacogastric caco+gastric(胃) –&gt; (消化不良的) cacophony go ahead and check it out yourself! Day 3 carb- /carbo- 碳 carbohydrate carbo+hydr(水)+ate(动词后缀) –&gt; (碳水化合物) carbide, carbonation go ahead and check it out yourself! circum- 环绕，周围 circumfluence circum+fluence(流) –&gt; (环流) circumference, circumlocution, circumnavigate, circumscribe, circumspect, circumvent go ahead and check it out yourself! co- /col- + root with same consonants /com-, con-, cor- 共同 coexist co+exist(语言) –&gt; (共存的) collocate col+locate(排布) –&gt; (搭配，并存) concur con+cur(发生) –&gt; (同时发生) cohabit, cohere, cosign, coaction, coagent, co-author, collateral, colloquial, compassion, contemporary, correlate, correspond, compatriot, concentric, concord, confluence go ahead and check it out yourself! com-, con-, cor- 加强 commemorate com+memory(记忆)+ate(动词后缀) –&gt; (纪念) condense con+dense(稠密的) –&gt; (使凝结) compress, congregate, corroborate go ahead and check it out yourself! contra- /counter- 反对，相反，对比 contraflow contra+flow(流) –&gt; (逆流) counterproductive counter+productive(有效率的) –&gt; (产生相反效果的) contradict, contraband, contravene, counterpart, counteract, counter-attack, counterbalance, counter-clockwise, countercurrent go ahead and check it out yourself! Day 4 de- /di- /dis- 除去，剥夺，取消 decode de+code(密码) –&gt; (破译) divest di+vest(背心) –&gt; (剥夺，处理掉) discolor dis+color(颜色) –&gt; (褪色) decontrol, deforest, desalt, deface, defame, dehydrate, displace, disarm go ahead and check it out yourself! de- /di- /dis- 使，加强 debar de+bar(栅栏) –&gt; (阻拦) divert di+vert(方向) –&gt; (转向) disannul dis+annul(取消，废除) –&gt; (取消，废除) depict, delimit, delineate, denude, declaim, dilute, discern, dissever, distend go ahead and check it out yourself! de- /dif- + root with same consonants /dis- 否定，非，相反 decompose de+compose(组成) –&gt; (分解) diffident dif+fident(联想confident) –&gt; (胆怯的，自卑的，犹豫的) disorder dis+order(顺序) –&gt; (混乱，紊乱) demilitarize, decentralize, demobilize, denationalize, disproof, dissimilar go ahead and check it out yourself! de- /dif- + root with same consonants /dis- 离开，分开 derail de+rail(铁轨) –&gt; (脱离正常轨迹，出轨) diffuse dif+fuse(注入) –&gt; (散播，传播) disband dis+band(乐队) –&gt; (解散) deplane, dethrone, detrain, diffluence, disorganize go ahead and check it out yourself! Day 5 de- 向下，降低，减少 depress de+press(按) –&gt; (把(心情)向下按) –&gt; (压抑) declass, depopulation, devalue, decelerate go ahead and check it out yourself! dec- /deca- 十 decathlete dec+athlete(运动员) –&gt; (十项全能选手) decagon deca+gon(角) –&gt; (十角形，十边形) decade, decagram(and all the other units) go ahead and check it out yourself! deci- 十分之一 decibel deci+bel(贝尔) –&gt; (分贝) decimeter, decigram(and all the other units) go ahead and check it out yourself! demi- /hemi- /semi- 半 demigod demi+god(神) –&gt; (半神，希腊神话很常见喔) hemisphere hemi+sphere(球) –&gt; (半球) semiannual semi+annual(每年) –&gt; (一年两次的) demi-fixed, hemicycle, semicircle, semicolony, semiconductor, semiautomatic, semiconscious, semifinal, semiweekly, semimonthly go ahead and check it out yourself! di- 二，两 dilemma di+lemma(假设) –&gt; (进退两难) dioxide, digamist go ahead and check it out yourself! dia- 穿过，交叉，两者之间 diagonal dia+gon(角)+al(凑音节后缀) –&gt; (对角线) diagram, diameter, dialectic go ahead and check it out yourself! dys- 坏，不良；困难的 dyspathy dys+pathy(联想sympathy，情感) –&gt; (无情) dysphonia dys+phon(声)+ia(凑音节后缀) –&gt; (发音困难) dystrophy, dysfunction, dyslexia, dyspepsia go ahead and check it out yourself! Day 6 e- /ex- 出，外 emerge e+merge(浸没) –&gt; (浮现) exhale ex+hale(呼吸) –&gt; (呼气) export, excavate, exorbitant, exalt, expatriate go ahead and check it out yourself! e- 表加强， 延申 elongate e+long(长)+ate(动词后缀) –&gt; (伸长) elaborate, evanish go ahead and check it out yourself! e- 无，除去 eradicate e+radic(根)+ate(动词后缀) –&gt; (根除) efface, emasculate, eliminate go ahead and check it out yourself! eco- 生态，经济 ecology eco+logy(领域，名词后缀) –&gt; (生态学后缀) ecotourism, ecosystem go ahead and check it out yourself! em- /en- 进入…之中，包围 empathy em+pathy(情感) –&gt; (进入他人情感) –&gt; (同情，共鸣) enroll en+roll(名单) –&gt; (登记) embed, embrace, enchain, enlighten, entrap, encompass, enlist go ahead and check it out yourself! em- /en- 使 embattle em+battle(战斗) –&gt; (布阵，备战) enchant en+chant(吟唱，赞扬) –&gt; (使迷醉) embody, enfranchise, embitter, enact(act做法律), endanger go ahead and check it out yourself! em- /en- 加以，饰以 embalm em+balm(香料) –&gt; (涂香料) embank, embar, emblazon, emborder go ahead and check it out yourself! Day 7 epi- 在周围或中间;后 epicenter epi+center(中心) –&gt; (震中) epidemic, epigraph, epigram, epilogue, epitome go ahead and check it out yourself! eu- 真，善，美 eulogize eu+log(说话)+ize(动词后缀) –&gt; (赞美) eulogistic, euphonious go ahead and check it out yourself! Also remember to ask if you can’t figure out the meaning! ex- 前面的，前任的 ex-husband (ex-boyfriend or simply just ‘ex’) ex+husband(丈夫) –&gt; (前夫) ex-minister, ex-president go ahead and check it out yourself! exo- 外部，外面 exotic exo+tic(形容词后缀) –&gt; (异国情调的) exocentric, exoteric go ahead and check it out yourself! extra- /extro- 超过，以外 extracurricular extra+curricular(课程的) –&gt; (超出课内的) –&gt; (课外的) extrovert extro+vert(转变) –&gt; (外向的) extraordinary, extravagant, extramarital, extraviolet(however we often say ultraviolet), extraneous, extraofficial go ahead and check it out yourself! some Easter Egg Supercalifragilisticexpialidocious super(非常)+cali(词根，美好的)+fragilistic(fragile易碎)+expiali(查了下是to atone)+docious(查了下是educable) 所以大概意思是你的美好可以补偿未受教育的脆弱哈哈哈 It probably originated from a particular song in an Disney animation OST (Short for original soundtrack) called Here’s the lyrics I googled (Actually I do believe that reading and remembering lyrics (which I have done a lot in high school) is a great way to cultivate linguistic sense and is a good practice of rhyme writing): Supercalifragilisticexpialidocious Even though the sound of it Is something quite atrocious If you say it loud enough You’ll always sound precocious Supercalifragilisticexpialidocious I was afraid to speak When I was just a lad My father gave my nose a tweak And told me I was bad And then one day I heard a word To save my aching nose It was the biggest word you ever heard And this is how it goes. Supercalifragilisticexpialidocious Even though the sound of it Is something quite atrocious If you say it loud enough You’ll aways sound precocious Supercalifragilisticexpialidocious Supercalifragilisticexpialidocious I traveled all around the world And everywhere I went I used this word in all I say I used this very word in all I said in did I say my special word And then they ask me out for tea Day 8 fore- 前面，预先 forebear fore+bear(出生) –&gt; (祖先) forearm, forefather, forefinger, forerunner, foreshadow, foresight, forestall, foreword go ahead and check it out yourself! ge(o)- 地，地球 geocentric geo+centric(中心的) –&gt; (以地球为中心的) geologist, geometry go ahead and check it out yourself! Also remember to ask if you can’t figure out the meaning! hect(o)- 百 hectogram hecto+gram(克) –&gt; (一百克) hectare, hectometer, hectowatt go ahead and check it out yourself! hetero- 其他的，不同的 heterosexual hetero+sexual(性别的) –&gt; (异性的) heterodox, heterogenous go ahead and check it out yourself! holo- 全部，完全 holomorphic holo+morphic(形态) –&gt; (全对称的) holocaust, holistic, holograph, hologram go ahead and check it out yourself! homo- 相同的，同类的 homosexual homo+sexual(性别的) –&gt; (同性恋的) (我们一般讲homo就是同性恋，男同俚语gay，女同lesbian，通常说les，然后bi（音by）指双性恋) homophobia, homocentric, homograph, homonym go ahead and check it out yourself! Day 9 hyper- 超过，超多 hyperactive hyper+active(活动的) –&gt; (过度活跃的) hypercritical, hypersensitive, hypertension, (星战设定里intergalactic travel之前需要“jump into hyperspace”，翻译过来大概是跃入超空间，有很帅的特效喔) go ahead and check it out yourself! hypo- 下，低于；次于 hypocrisy hypo+cris(批评)+y(凑音节后缀) –&gt; (人背后批评) –&gt; (伪善) (我可喜欢用这个词了哈哈，用于评判一些社会现状很有用) hypotension hypo+tension(压力) –&gt; (低血压) hypocrite, hypotrophy go ahead and check it out yourself! Also remember to ask if you can’t figure out the meaning! il- + root with same consonants /im-, in- /ir- + root with same consonants 不，无 illegible il+legible(可以辨认的) –&gt; (难以辨认的) impartial im+partial(偏袒的) –&gt; (公平公正的) irrational ir+rational(合理的) –&gt; (不合理的) (今天的例子去掉词根词缀都很常用的词哦，比如这个rational在Winston Churchill写的一篇文章里面用到：It may also be said that rational, industrious, useful human beings are divided into two classes: first, whose whose work is work and whose pleasure is pleasure; and secondly, those whose work and pleasure is one.这篇文章当时背的比较艰难，但是写的太有哲理了。有机会开个专题和你一起一句句鉴赏。另Churchill本人是个政治家但获得过诺贝尔文学奖，他的演讲和作品都具有很高的可读性。强烈推荐你开始看我给你的原版书的时候从他开始看起，有一个很有名的演讲叫”We Shall Fight on the Beaches”在至暗时刻和诺兰导演的敦刻尔克中都出现过，两部电影也都很推荐看喔) illimitable, illiterate, illegitimate, illiberal, illicit, immoral, ineffectual, inevitable, immoderate, immobile, impassive(an exception), inedible, inimitable, innocuous, irreplaceable, irreversible, irresistible, irrevocable, irreconcilable, irreproachable, irreverent go ahead and check it out yourself! il- + root with same consonants /im-, in- /intro- /ir- + root with same consonants 向内，进入 illuminate il+luminate(照明) –&gt; (启发，阐明) immerge im+merge(融合) –&gt; (浸没) introversible intro+versible(转动的) –&gt; (可向内翻转的) irruption ir+rupt(断)+ion(名词后缀) –&gt; (闯入) illusion, import, incorporate, inflow, immigrate, imprison, influx, inhale, imperil, implant, infuse, ingest, introspect, introvert, irrigation go ahead and check it out yourself! il- + root with same consonants /im-, in- /ir- + root with same consonants 使；加以，饰以 illustrious il+lustr(光)+ious(形容词后缀) –&gt; (卓越的，杰出的) impulse im+pulse(脉搏) –&gt; (冲动) irradiate ir+radiate(辐射) –&gt; (照射，使灿烂) illuviate, inflict, impassion, imprint, impeach, impel, impersonate, impoverish, incite, increment, incriminate, inflame, irritate go ahead and check it out yourself! Day 10 infra- 低于 infrared infra+red(红色) –&gt; (红外线) infrastructure go ahead and check it out yourself! inter- 在…之间 interpersonal inter+personal(私人的) –&gt; (人际的，人与人之间的) intercity, interchange, interstate, interpose, interstellar(星际穿越！), intersect go ahead and check it out yourself! inter- 相互 interdependence inter+dependence(依赖) –&gt; (互相依赖) interact, interplay, interrelate go ahead and check it out yourself! intra- 内部 intracity intra+city(城市) –&gt; (市内的) intranational, intrapersonal, intracellular go ahead and check it out yourself! kilo- 千 kilobyte kilo+byte(字节) –&gt; (千字节) kilowatt, check out other units yourself! go ahead and check it out yourself! macro- 大，宏大（macro本身是C语言预定义的宏#define xxx） macroscopic macro+scop(观察，scope)+ic(形容词后缀) –&gt; (宏观上的) macrocosm, macroeconomics, macrophysics, macroscale, macrostructure, macroworld, macrobian go ahead and check it out yourself! micro- 小，微小 microcosm micro+cosm(cosmic宇宙) –&gt; (微观世界) microbe, microbiology, microelement, microorganism, microprocessor, microscopic go ahead and check it out yourself! Day 11 magn(i)- 大 magniloquent magni+loqu(说话)+ent(形容词后缀) –&gt; (吹牛的) magnification, magnificence, magnitude, magnate, magnanimity go ahead and check it out yourself! mal-, male-, mali- 坏，恶 malnutrition mal+nutrition(营养) –&gt; (营养不良) malefaction, malevolent, malign, malignant, maladjusted, malcontent, malediction, malice, malpractice, maltreat go ahead and check it out yourself! mega- 巨大的；百万，兆 megastar mega+star(星) –&gt; (巨星) megabyte mega+byte(字节) –&gt; (兆字节) megaphone, megahertz, megawatt go ahead and check it out yourself! mill-, mill- 千；千分之一 millennial mil+enn(年)+ial(形容词后缀) –&gt; (千年的，Millennium Falcon——Han Solo’s Renowned Spaceship in Star War Series) millimeter milli+meter(米) –&gt; (千分之一米，毫米) mis- 错；坏 misapprehend mis+apprehend(理解) –&gt; (误解) misfortune mis+fortune(幸运) –&gt; (不幸(我之前用了三年的微信签名Childish Misfortune)) misapply, misbehavior, misdeed, misguide, misdoing, misinform, misjudge, misrule, mishap, misinterpret, misspell go ahead and check it out yourself! mono-, mon- 单个，一个 monologue mono+log(说话)+ue(凑音节) –&gt; (独白，我最喜欢的吉他手之一Sungha Jung出过一张很棒的专辑就叫monologue) monarch, monochrome, monotone, monogamy, monograph, monomania go ahead and check it out yourself! multi- 多的 multilateral multi+lateral(边的) –&gt; (多边的) multicultural, multimedia, multiangular, multilingual, multistory, multicellular go ahead and check it out yourself! myria- 一万，无数 myriapod myria+pod(足) –&gt; (千足虫，小时候一直玩的那种，可能俗称蚰蜒) myriad go ahead and check it out yourself! Day 12 neo- 新的 Neolithic neo+lithic(石头) –&gt; (新石器时代，我记得我初中第一节托福课做的第一篇阅读就是关于Neolithic) neoclassical, neologism, neophyte go ahead and check it out yourself! non- 不，非 nonaligned non+aligned(结盟) –&gt; (不结盟的) nonfiction, nonprofit, nonprofessional, nonverbal, nontoxic go ahead and check it out yourself! ob-, op- 逆，倒 obloquy ob+loqu(说)+y(凑音节) –&gt; (大骂，还记得我的网易云id叫Myz_Hsomniluquy不，somniloquy梦呓，somni是睡眠的前缀，loquy是说话的词根。暑假的时候我各个平台的id都是Myz_Hsu格式，然后往s和u之间加新词组成新的id。比如我的forest id是Myz_Hshrubu，shrub灌木树丛，之前b站id是Myz_Hsalamanderu，salamander蝾螈，QQid是Myz_Hschwiftu，schwifty是嗨的adj) obstruct, obverse go ahead and check it out yourself! ob-, op- 表加强 obdurate ob+dur(持续)+ate(动词后缀) –&gt; (固执的) oblong, obnoxious, obtrude go ahead and check it out yourself! octa-, octo- 八，第八 octogenarian octo+genarian(年代) –&gt; (八旬老人) octopus go ahead and check it out yourself! out- 超过，胜过 outpace out+pace(节奏) –&gt; (在速度上超过) outlive, outrage, outrun, outspend, outwear, outbid, outperform, outsmart, outvote, outlast, outnumber, outweigh, outwit go ahead and check it out yourself! out- 出，外 outrush out+rush(冲) –&gt; (冲出) outrage, outage, outflow, outgas, outroot, outskirts, outlaw, outlandish go ahead and check it out yourself! Day 13 over- 过度，过分 overestimate over+estimate(估计) –&gt; (高估，参考underestimate) overburden, overcooked, overcrowded, overpay, overpraise, overproduction, overcharge, overcorrect, overdose go ahead and check it out yourself! over- 上面；胜过 overleap over+leap(跳) –&gt; (跳过, leap frog小跳蛙🎵) overpower over+power(权力) –&gt; (征服) overcoat, overhear, overland, overbridge, overhaul, overtone, overlay, overlie, overrule go ahead and check it out yourself! pan-, panto- 广泛的，全部的 panacea pan+acea(治疗) –&gt; (灵丹妙药，一般咱们用都取metaphorical meaning) pandemic, pandemonium, pansophic, pantoscope go ahead and check it out yourself! para- 类似，辅助 paramedic para+medic(医疗兵) –&gt; (医务辅助人员) paralegal go ahead and check it out yourself! para- 旁边；超，外 paranormal para+normal(正常) –&gt; (超自然=supernatural) paradox, paralyze go ahead and check it out yourself! para- 防止，保护，通常引申为降落伞 paratroops para+troops(士兵) –&gt; (伞兵部队) parachute, paraglider go ahead and check it out yourself! pen- 近似，几乎 peninsula pen+insula(岛) –&gt; (almost anisland -&gt; 半岛) Day 14 penta- 五 pentagon penta+gon(角) –&gt; (五角形，五角大楼) pentagram go ahead and check it out yourself! per- 贯穿，至始至终 perennial per+ennial(年的) –&gt; (全年的；多年生的) perpetual, perspire, pervade go ahead and check it out yourself! peri- 周围，环绕 perimeter peri+meter(测量) –&gt; (周长) periphery, periphrastic go ahead and check it out yourself! poly- 多 polyfunctional poly+functional(功能的) –&gt; (多功能的) polygamy, polygon, polysyllable, polyglot go ahead and check it out yourself! post- 后 postgraduate post+graduate(毕业) –&gt; (研究生) postface, postmodern, postdate, posthumous, postoperative, postscript, postwar go ahead and check it out yourself! pre- 前，预先 precaution pre+caution(小心) –&gt; (预防) precede, precedent, preclude, precondition, prefix, prewar, preliberation, predestination, prepay, prescient, prerogative go ahead and check it out yourself! pseudo- 假的 pseuodocode pseudo+code(代码) –&gt; (伪代码, a.k.a 算法) pseudo, pseudograph, pseudomyopia, pseudonym go ahead and check it out yourself! Day 15 pro- 向前，在前 prologue pro+logue(说话) –&gt; (序言) profess, progenitor, protrude, provident go ahead and check it out yourself! pro- 赞同，拥护 pro-American pro+American(美国的) –&gt; (亲美的) proslavery go ahead and check it out yourself! pro- 代理 pronoun pro+noun(名词) –&gt; (代词) pro-consul, procurator, prolocutor go ahead and check it out yourself! quadr(i)-, quadro- 四 quadrennial quadr+enniel(年的) –&gt; (四年一次的) quadrilateral, quadruple, quadrangle, quadrant go ahead and check it out yourself! quasi- 类似，准；半 quasi-official quasi+official(官方的) –&gt; (半官方的) quasi-historical go ahead and check it out yourself! re-, retro- 回，向后 rebound re+bound(弹) –&gt; (回弹) retroaction retro+action(作用) –&gt; (反作用) reclaim, repel, rejuvenate, regress, resonant, retract, retrospect, retroject, retrovert, retrocede, retroflex, retrogress go ahead and check it out yourself! Day 16 re- 一再，重新 regenerate re+generate(生成) –&gt; (重生) reassure, rebirth, reprint, recompense, reexamination, resurgence go ahead and check it out yourself! se- 分开，离开 secession se+cession(=session) –&gt; ((从政党)退出，脱离) segregate, secern, secrete, secede, seclusion go ahead and check it out yourself! sex- 流 sexcentnary sex+centnary(一百年的) –&gt; (六百年的) sexdigital, sextant go ahead and check it out yourself! step- 后，继 stepmother step+mother(母亲) –&gt; (继母) stepbrother, stepchild, stepdaughter, stepfather, stepsister, stepson go ahead and check it out yourself! sym-, syn-, syl- 共同，同时 symbiosis sym+biosis(生长的) –&gt; (共生) synchronous syn+chronous(时间的) –&gt; (同时的) symmetry, sympathy, symphony, syndrome, syllable, synonym, synthesis go ahead and check it out yourself! sub- 稍微，略微 subacid sub+acid(酸) –&gt; (略酸) subacute, subangular, subarid go ahead and check it out yourself! Day 17 sub- 接近 subcentral sub+central(中心) –&gt; (接近中心的) subequal, suburb, subadult, subequational go ahead and check it out yourself! sub- 再，更 subdivide sub+divide(划分) –&gt; (再分) subcontract, sublet, subtenant go ahead and check it out yourself! sub- / suc-, suf, sug-, sup- + root with same consonants 下；次；分支 subsurface sub+surface(表面的) –&gt; (地下的) subcontinent sub+continent(大陆的) –&gt; (次大陆) subheading sub+heading(标题) –&gt; (副标题) suffix suf+fix(固定) –&gt; (后缀) subconscious, submarine, submerge, subnormal, substandard, substructure, submissive, subterranean, subvert; subatomic, subsonic, subtropics; subeditor, subofficer, subsidiary, subagent, subbranch, subculture, subdean, suboffice go ahead and check it out yourself! super- 超，超级 supernova super+nova(新星) –&gt; (超新星) supersonic, superspeed, superlative go ahead and check it out yourself! super- 过多，过分 supercharge super+charge(负载) –&gt; (=overload) superfluous, supernutrition, supersensitive, supersaturate go ahead and check it out yourself! Day 18 trans- 横过，越过 transfrontier trans+frontier(国境) –&gt; (跨国境的，另：frontier有前线的意思，有个很棒的塔防游戏Kingdom Rush第二部subtitle就是Frontier) transcend, transect, transnational, transnormal, transatlantic, transcontinental go ahead and check it out yourself! trans- 变换，转移 transcribe trans+scribe(script词根) –&gt; (抄写，誊写) transaction, transform, transcode, transfuse, transmigrate, transmute, transfigure, transpose go ahead and check it out yourself! super-/ supera-/ sur- 上，超 superaqueous super+aqueous(水的) –&gt; (水上的) supraconductivity supra+conductivity(导体) –&gt; (超导电性) surtax sur+tax(税) –&gt; (附加税) superintend, superstition, superstructure; supra-class, supraconscious; surpass, surreal, surname, surcharge, surfeit, surmount go ahead and check it out yourself! tri- 三 trilingual tri+lingual(语言的) –&gt; (会三种语言的) trio, tripod, trilogy go ahead and check it out yourself! twi- 二 twilight, twin go ahead and check it out yourself! ultra- 极端 ultraliberal ultra+liberal(自由的) –&gt; (极端自由的，word we may use on American Politics) ultrapure, ultra-right go ahead and check it out yourself! ultra- 超出 ultraviolet ultra+violet(紫色的) –&gt; (紫外线) ultracritical, ultramodern, ultramundane, ultrasonic go ahead and check it out yourself! Day 19 un- 不，无 uncondtional un+conditional(条件) –&gt; (无条件的，My love for you will stay unconditional ever after!) unworldly, unbiased, undetected go ahead and check it out yourself! un- 打开，解开 unmask un+mask(面具) –&gt; (揭开) unbind, unfold, unload, unplug, unscrew, untie, unveil, unearth, unveil, unbosom, unfasten go ahead and check it out yourself! under- 在…之下，内 underclass under+class(阶级) –&gt; (底层阶级) underscore, underworld, underling, undersecretary, underwork go ahead and check it out yourself! under- 不足的 undernourished under+nourished(营养) –&gt; (营养不足的) underage, underdress, underpay, underbid, underdeveloped, underrate, undersell go ahead and check it out yourself! up- 上，向上 uphold up+hold(握住) –&gt; (支持) upheaval, uproot, upturn, upfront go ahead and check it out yourself! vice- 副，次 vice-president vice+president(总统) –&gt; (副总统) vice-chairman, vice-manager go ahead and check it out yourself! with- 向后，相反 withhold with+hold(抓住) –&gt; (阻止) withdraw, withstand go ahead and check it out yourself! Part 2. Suffix Day 20 -ability 可…性 mutability mut(变化)+ability –&gt; (可变的) sensibility, resistibility, adaptablity go ahead and check it out yourself! -able 能…的 agreeable agree(同意)+able –&gt; (愉快的) conceivable, credible, desirable, eligible, knowable, trackable go ahead and check it out yourself! -aceous /-acious /-aneous 具有…性质的 foliaceous foli(叶子)+aceous –&gt; (叶状的) vivacious viva(生命 viva la vida 生命万岁！)+acious –&gt; (有生机的) instantaneous instant(瞬间)+aneous –&gt; (即时的) simultaneous, spontaneous, extraneous go ahead and check it out yourself! -aholic /-oholic 着迷的 workaholic work(工作)+aholic –&gt; (工作狂，可以根据这个后缀随便编单词嘻嘻) bookaholic, shopaholic go ahead and check it out yourself! -ain /-aire /-al /-an /-ant /-ard(含贬义) /-ast 名词后缀表人 chieftain chief(首领)+ain –&gt; (酋长) millionaire million(百万)+aire –&gt; (百万富翁) partisan party(党)+an –&gt; (党徒) drunkard drunk(喝醉的)+ard –&gt; (醉鬼) gymnast gym(健身房)+ast –&gt; (体操运动员) captain, villain; commissionaire, doctrinaire; aboriginal; republican, amphibian, artisan; aspirant; laggard, bastard, niggard, sluggard; dynast, encomiast go ahead and check it out yourself! -arium/ -orium 地点，场所 aquarium aqua(水)+arium–&gt; (水族馆) auditorium, vivarium go ahead and check it out yourself!","link":"/2022/08/15/6-twenty-days-vocabulary-buildup/"},{"title":"随记 | 于 2020.12 考完托福后","text":"浅聊客观评价来说，托福难度不高。考前刷过少许题目之后身边的小伙伴们都能做到阅读听力接近满分。那么，决定高分的部分是写作和口语。然而，写作和口语多是机器阅卷，所以掌握适当技巧，结合自己本身还不错的英语底子，高分便不难拿。不过，私以为在申请过程中，只要不申请“贵族学校”，如部分藤校，文理学院等，一般的学校，tech 类尤甚，对于语言考试的要求仅仅是过线而已。所以，有空余时间的话大可多做些自己喜欢的事情，卷卷绩点，跟朋友 hang out。这里给一个简单的参考线，103 + 合格，105 + 很棒，108 + 超群，110 + 浪费。 下面简单聊聊每个部分的考试形式和应试技巧。 口语前三个task15s / 20s 准备，45s / 1min 说，为准备时间很短，所以在记笔记的时候只写要说的几个 reason 中 key points 模板： *Yes / no, I do / don’t believe that … // My preference for … is that …*（重复题干，语速慢一些，声音大一些，语调自信很重要） and my reasons are listed as follows. The first reason is that … In addition, … Finally I want to emphasize that … Consequently … 重复题目，有时间讲没时间拉倒。 For one thing, … For another … Also it should be noted that … ( In conclusion … ) 如何避免卡壳：忌说 eh / ah / wu / en，用 yeah, well, like, you know, say, 补充自己观点用 which inferred/ indicates (the idea that), namely…, In fact what I want to emphasize is… 。 最后一个task概括 lecture / class，注意下多记点笔记，到时候对着笔记读就好。 模板： The lecturer / author came up with the idea that … \\ concept of … He / she first mentioned the significance / phenomenon ( from which he / she concluded … ) … Later he / she claimed that … In addition / However, … he / she added / raised a question ( 质疑 ) In conclusion, all of the above contributes to the lecturer / author’s idea of … For quotation: The lecturer / author mentioned in his lecture / text that … // He / she made a very good point such that … 注：这个模板也可以用于 integrated writing。 阅读背单词，多读长难句保证文章看懂没压力。 考试别睡着。 听力多刷题，大概有idea都会问些啥问题。 练速记笔记，记关键词和句子之间逻辑关系，用只要自己能看得懂的符号，中英结合。 作文Integrated Writing见口语最后一个task。 大作文30 min，300+字，能多写尽量多写。 构思五分钟，记一下三个以上reason的key words ( 想不到点可以辩证 )，马上开始码字。 千万不能有语法句法错误，不确定拼写的词换掉。","link":"/2022/08/15/5-simple-tips-for-toefl/"},{"title":"Hexo Icarus (1) | The Road To Personalization","text":"Prerequisite Git Github Pages node.js Install123456789101112131415npm i hexo-cli -g// 验证是否安装成功hexo -v// 初始化文件夹hexo initnpm install// 生成静态文件hexo g// 打开本地服务器预览: localhost:4000/hexo s Deploy修改 _config.yml 配置文件最后一段 1234deploy: type: git repository: git@github.com:Maizehsu/Maizehsu.github.io.git branch: main 安装插件 npm i hexo-deployer-git ，此时 \\source\\_posts 目录下放置 .md 文档。 三板斧更新 Blog 12345678// 生成静态文件hexo g// 本地预览效果hexo s// 部署到 githubhexo d LayoutLogo左上角和左下角导航栏图标修改在 _config.icarus.yml 123# Path or URL to the website's logologo: text: Maize's Blog Favicon &amp; Titlefavicon 修改在 _config.icarus.yml ，这里用了 favicon generator from text ，字体用的是 Acme 1234# Page metadata configurationshead: # URL or path to the website's icon favicon: /img/favicon.ico 首页 title 修改在 _config.yml 1title: Maize's Blog 同样地方顺便也可以修改一下 author 1author: Maize_hsu 首页三栏，阅读页两栏，把 Recents 和 Archives 放在右边栏，在阅读模式下放回左边。新建一个 _config.post.yml 覆盖之前的配置 RSS首先用 hexo-generator-feed 插件生成 RSS 源，再通过 follow.it 托管服务，具体教程请参照这里 Navbar暂时没改，未来需要增加更多顶部栏时候再配置。导航栏右侧 icon 对应的 github 链接改成了个人网站的 repo 12345# Links to be shown on the right of the navigation barlinks: Download on GitHub: icon: fab fa-github url: https://github.com/Maizehsu/Maizehsu.github.io Footer右下角 copyright 部分暂时没打算动 Article &amp; search代码高亮和搜索暂时没打算动 WidgetWidget 是 Icarus 主题精髓部分，下面是具体配置 1234567891011121314151617181920212223242526272829303132333435position: lefttype: profile# Author nameauthor: Maize_hsu# Author titleauthor_title: Undergrad of cs @umich &amp;&amp; ece @sjtu# Author's current locationlocation: Ann Arbor, MI# URL or path to the avatar imageavatar: img/avatar.jpg# Whether show the rounded avatar imageavatar_rounded: true# Email address for the Gravatargravatar:# URL or path for the follow buttonfollow_link: https://github.com/Maizehsu# Links to be shown on the bottom of the profile widgetsocial_links: Email: icon: fas fa-envelope url: mailto:maizehsu02@gmail.com Github: icon: fab fa-github url: https://github.com/Maizehsu # Twitter: # icon: fab fa-twitter # url: https://twitter.com Linkedin: icon: fab fa-linkedin url: https://www.linkedin.com CV: download/cv_mai_xu.pdf douban: https://www.douban.com/people/199359961/ # Zhihu: # icon: fab fa-zhihu # url: https://www.zhihu.com/people/maize-hsu 其中图标可以选择使用 font-awesome 库 ，也可以用文字形式，如 1&lt;链接名称&gt;: &lt;链接的URL地址&gt; 删掉了友链和推广板块 Comment评论系统用了 gitalk ，网上教程很多就不多赘述了，配置如下 1234567comment: type: gitalk client_id: xxxx client_secret: xxxx repo: gitalk owner: Maizehsu admin: Maizehsu 统计数据Google Analytics，网上教程很多，这里也不赘述了 其他插件在 markdown 环境下渲染数学公式 1mathjax: true https 加密参考了这两个链接配置自定义域名和 Github Page 之间的联系： https://github.com/orgs/community/discussions/22052 https://stackoverflow.com/questions/54059217/how-to-fix-domain-does-not-resolve-to-the-github-pages-server-error-in-github 对于我用的 namecheap.com 来说， Here you will need to create several records for your domain: A record for @ pointing to 185.199.108.153 A record for @ pointing to 185.199.109.153 A record for @ pointing to 185.199.110.153 A record for @ pointing to 185.199.111.153 CNAME record for www pointing to your username.github.io (the username should be replaced with your actual GitHub account username): 配置完记得 Just make sure you wait for the DNS Propagation to take effect which in some cases might take up to 24hrs. WAIT A DAY, ENJOY OUTDOOR WALK. 真的很喜欢 stack overflow 上的一些幽默。","link":"/2022/08/15/4-icarus-theme-configuration-1/"},{"title":"Leetcode 刷题笔记 | Cpp STL 总结自用","text":"Vector1#include &lt;vector&gt; 特点： 拥有一段连续的内存空间，并且起始地址不变，因此它能非常好的支持随机存取，但由于它的内存空间是连续的，所以在中间进行插入和删除会造成内存块的拷贝。另外，当该数组后的内存空间不够时，需要重新申请一块足够大的内存并进行内存的拷贝。这些都大大影响了 vector 的效率； 对头部和中间进行插入删除元素操作需要移动内存，如果你的元素是结构或类，那么移动的同时还会进行构造和析构操作，所以性能不高； 对最后元素操作最快（在后面插入删除元素最快），此时一般不需要移动内存，只有保留内存不够时才需要。 优点：支持随机访问，查询效率高。 缺点：当向其头部或中部插入或删除元素时，为了保持原本的相对次序，插入或删除点之后的所有元素都必须移动，所以插入的效率比较低。 适用场景：适用于对象简单，变化较小，并且频繁随机访问的场景。 构造函数 123456789101112//obj中含有obj_num个obj_init_value为值的typevector&lt;type&gt;obj(obj_num, obj_init_value);// obj1为obj2的复制vertor&lt;type&gt;obj1(obj2);// obj1为obj2的前三个元素复制vector&lt;type&gt;obj1(obj2.begin(), obj2.begin()+3);// 从数组中获得初值int a[7] = {1, 2, 3, 4, 5, 6, 7};vector&lt;int&gt; obj(a, a+7); push_back(elem), pop_back() 实现在容器最后添加 / 删除元素，顺序读取，迭代器读取 123456789101112131415// push_back(elem) 在数组最后添加数据for (int i = 0; i &lt; 10; i++) { obj.push_back(i); cout&lt;&lt;obj[i]&lt;&lt;&quot;,&quot;;} // 去掉数组最后一个数据for (vector&lt;int&gt;::iterator it=obj.begin(); it!=obj.end(); it++) { obj.pop_back();}//在第一个元素前面插入5vector&lt;int&gt;::iterator it;it = obj.begin();obj.insert(it, 5); clear() 清除所有数据，empty() 判断是否为空 obj.front() 和 obj.back() 返回第一项和最后一项 begin() 得到数组头的指针，end() 得到数组的最后一个单元 + 1 的指针 1234567891011121314151617#include &lt;vector&gt;#include &lt;iostream&gt;#include &lt;algorithm&gt;using namespace std;int main() { vector&lt;int&gt;obj; obj.push_back(1); obj.push_back(3); obj.push_back(0); sort(obj.begin(), obj.end()); //从小到大 reverse(obj.begin(),obj.end()); //从大到小 return 0;} 其他 12//查找10，若存在返回其在向量中的位置，需要include&lt;algorithm&gt; find(obj.begin(), obj.end(), 10); Deque1#include &lt;deque&gt; 特点： deque 允许使用常数项时间对头端进行元素的插入和删除操作； deque 没有容量的概念，因为它是动态的以分段连续空间组合而成，随时可以增加一段新的空间并链接起来，换句话说，像vector那样“旧空间不足而重新配置一块更大空间，然后复制元素，再释放旧空间”这样的事情在deque身上是不会发生的。也因此，deque没有必须要提供所谓的空间保留（reserve）功能。虽然deque 容器也提供了Random Access Iterator，但是它的迭代器并不是普通的指针， 其复杂度和 vector不是一个量级，这当然影响各个运算的层面； 除非有必要，我们应该尽可能的使用 vector，而不是 deque。对 deque 进行的排序操作，为了最高效率，可将 deque 先完整的复制到一个 vector 中，对 vector 容器进行排序，再复制回 deque。 优点：支持随机访问，查询效率高；可在两端进行push、pop。 缺点：不适合中间插入删除操作；占用内存高。 适用场景：只有需要在首端进行插入/删除操作的时候，还要兼顾随机访问效率，才选择deque，否则都选择vector。 构造函数 1234567891011//默认构造形式deque&lt;T&gt; deqT;//构造函数将[beg, end)区间中的元素拷贝给本身deque(beg, end);//构造函数将n个elem拷贝给本身deque(n, elem);//拷贝构造函数deque(const deque &amp;deq); 其他函数 12345678//返回容器中元素的个数deque.size();//判断容器是否为空deque.empty();//重新指定容器的长度为num，若容器变长，则以默认值填充新位置；如果容器变短，则删除末尾超出容器长度的元素deque.resize(num, elem); List1#include &lt;list&gt; 特点： 没有空间预留习惯，所以每分配一个元素都会从内存中分配，每删除一个元素都会释放它占用的内存； 在哪里添加删除元素性能都很高，不需要移动内存，当然也不需要对每个元素都进行构造与析构了，所以常用来做随机插入和删除操作容器； 访问开始和最后两个元素最快，其他元素的访问时间一样。 优点：内存不连续，动态操作，可在任意位置插入或删除且效率高。 缺点：不支持随机访问。 适用场景：经常进行插入和删除操作并且不经常随机访问的场景。 构造函数 123456789// 创建一个包含 n 个元素的 list 容器，并为每个元素指定初始值list&lt;int&gt; value1(10, 5);// 在已有 list 容器的情况下，通过拷贝该容器可以创建新的 list 容器list&lt;int&gt; value2(value1);//通过拷贝其他类型容器（或者普通数组）中指定区域内的元素，可以创建新的 list 容器int a[] = { 1,2,3,4,5 };std::list&lt;int&gt; values(a, a+5); 删除特定位置元素 1val.erase(pos); Set1#include &lt;set&gt; 特点： set 中的元素都是排好序的，集合中没有重复的元素; map 和 set 的插入删除效率比用其他序列容器高，因为对于关联容器来说，不需要做内存拷贝和内存移动。 优点：使用平衡二叉树实现，便于元素查找，且保持了元素的唯一性，以及能自动排序。 缺点：每次插入值的时候，都需要调整红黑树，效率有一定影响。 适用场景：适用于经常查找一个元素是否在某群集中且需要排序的场景。 特点 1：不重复，自动排序 1234567891011set&lt;int&gt; setT;setT.insert(3);setT.insert(1);setT.insert(2);setT.insert(1);set&lt;int&gt;::iterator it;for (it = setTemp.begin(); it != setTemp.end(); it++) { cout &lt;&lt; *it &lt;&lt; &quot; &quot;;} 特点 2：关联性容器，键值对默认1，2，3 multiset 可以包含重复元素 unordered_set 用哈希表存储，无序但查找快 Map1#include &lt;map&gt; 特点： 自动建立 Key - value 的对应。key 和 value 可以是任意你需要的类型； 根据 key 值快速查找记录，查找的复杂度基本是 O ( log N )，如果有 1000 个记录，二分查找最多查找 10次； 增加和删除节点对迭代器的影响很小，除了那个操作节点，对其他的节点都没有什么影响； 对于迭代器来说，可以修改实值，而不能修改 key。 优点：使用平衡二叉树实现，便于元素查找，且保持了元素的唯一性，可以创建字典； 缺点：每次插入值的时候，都需要调整红黑树，效率有一定影响。 适用场景：适用于需要存储一个数据字典，并要求方便地根据 key 找 value 的场景。 构造函数 12345678// 创造一个键值对std::map&lt;std::string, int&gt; myMap;// 提前进行初始化std::map&lt;std::string, int&gt; myMap{ {&quot;C语言教程&quot;,10},{&quot;STL教程&quot;,20} };// map 容器中存储的键值对，其本质都是 pair 类模板创建的 pair 对象std::map&lt;std::string, int&gt;myMap{std::make_pair(&quot;C语言教程&quot;,10), std::make_pair(&quot;STL教程&quot;,20)}; Summarize 特点 vector 头部与中间插入和删除效率较低，在尾部插入和删除效率高，支持随机访问； deque 是在头部和尾部插入和删除效率较高，支持随机访问，但效率没有 vector 高； list 在任意位置的插入和删除效率都较高，但不支持随机访问； set 由红黑树实现，其内部元素依据其值自动排序，每个元素值只能出现一次，不允许重复，且插入和删除效率比用其他序列容器高； map 可以自动建立 Key - value 的对应，key 和 value 可以是任意你需要的类型，根据 key 快速查找记录。 适用场景 如果需要高效的随机存取，不在乎插入和删除的效率，使用 vector； 如果需要大量的插入和删除元素，不关心随机存取的效率，使用 list； 如果需要随机存取，并且关心两端数据的插入和删除效率，使用 deque； 如果打算存储数据字典，并且要求方便地根据 key 找到 value，一对一的情况使用 map，一对多的情况使用 multimap； 如果打算查找一个元素是否存在于某集合中，唯一存在的情况使用 set，不唯一存在的情况使用 multiset。 时间复杂度 vector 在头部和中间位置插入和删除的时间复杂度为 O ( N ) ，在尾部插入和删除的时间复杂度为 O ( 1 ) ，查找的时间复杂度为 O ( 1 ) ； deque 在中间位置插入和删除的时间复杂度为 O ( N ) ，在头部和尾部插入和删除的时间复杂度为 O ( 1 ) ，查找的时间复杂度为 O ( 1 ) ； list 在任意位置插入和删除的时间复杂度都为 O ( 1 ) ，查找的时间复杂度为 O ( N ) ； set 和 map 都是通过红黑树实现，因此插入、删除和查找操作的时间复杂度都是 O ( log N ) 。 Reference [1]. https://zhuanlan.zhihu.com/p/130905242 [2]. https://blog.51cto.com/u_15452541/4955600","link":"/2022/08/15/2-notes-for-leetcode-stl/"},{"title":"The Start of Everything","text":"前言","link":"/2022/08/14/1-the-start-of-everything/"}],"tags":[{"name":"Bash","slug":"Bash","link":"/tags/Bash/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"笔记","slug":"笔记","link":"/tags/%E7%AC%94%E8%AE%B0/"},{"name":"Config","slug":"Config","link":"/tags/Config/"},{"name":"补档","slug":"补档","link":"/tags/%E8%A1%A5%E6%A1%A3/"},{"name":"随想","slug":"随想","link":"/tags/%E9%9A%8F%E6%83%B3/"},{"name":"公告","slug":"公告","link":"/tags/%E5%85%AC%E5%91%8A/"},{"name":"影评","slug":"影评","link":"/tags/%E5%BD%B1%E8%AF%84/"},{"name":"科幻","slug":"科幻","link":"/tags/%E7%A7%91%E5%B9%BB/"},{"name":"Icarus","slug":"Icarus","link":"/tags/Icarus/"},{"name":"Leetcode","slug":"Leetcode","link":"/tags/Leetcode/"},{"name":"秋招","slug":"秋招","link":"/tags/%E7%A7%8B%E6%8B%9B/"},{"name":"自查","slug":"自查","link":"/tags/%E8%87%AA%E6%9F%A5/"},{"name":"托福","slug":"托福","link":"/tags/%E6%89%98%E7%A6%8F/"},{"name":"申请","slug":"申请","link":"/tags/%E7%94%B3%E8%AF%B7/"},{"name":"语言","slug":"语言","link":"/tags/%E8%AF%AD%E8%A8%80/"},{"name":"Git","slug":"Git","link":"/tags/Git/"}],"categories":[{"name":"Tech","slug":"Tech","link":"/categories/Tech/"},{"name":"Dailies","slug":"Dailies","link":"/categories/Dailies/"},{"name":"Announcement","slug":"Announcement","link":"/categories/Announcement/"},{"name":"System","slug":"Tech/System","link":"/categories/Tech/System/"},{"name":"Reviews","slug":"Reviews","link":"/categories/Reviews/"},{"name":"Tools","slug":"Tech/Tools","link":"/categories/Tech/Tools/"},{"name":"Algorithm","slug":"Tech/Algorithm","link":"/categories/Tech/Algorithm/"},{"name":"English","slug":"Dailies/English","link":"/categories/Dailies/English/"},{"name":"Sci-fi","slug":"Reviews/Sci-fi","link":"/categories/Reviews/Sci-fi/"}],"pages":[{"title":"此内容因违规无法查看","text":"接相关投诉，此内容违反《互联网用户公众账号信息服务管理规定》，查详细内容","link":"/download/index.html"},{"title":"Welcome!","text":"About Me分享喜欢的诗中的一段话 If you can dream—and not make dreams your master;If you can think—and not make thoughts your aim;If you can meet with Triumph and DisasterAnd treat those two impostors just the same;If you can bear to hear the truth you’ve spokenTwisted by knaves to make a trap for fools,Or watch the things you gave your life to, broken,And stoop and build ’em up with worn-out tools: If —— by Rudyard Kipling Maize 是一位碌碌无为，很难挑出某方面 outstanding 的普通大学生。他初次来到大洋彼岸长期生活，偶尔会遇到一些能力盖不住压力的时刻令他觉得 overwhelming。但 deep down he thinks himself as a man with a good heart, constantly wishes for the world to be better, and is willing to do anything to fight for it. 于是他相信 everything will work out，目前处于混吃等死和踌躇满志之间的状态。 坐标 🇺🇸 密西根州安娜堡 兴趣 吉他🎸 电影🎬 读书📖 旅行✈️ Maize 最近主要在做两件事，一件是 constantly experimenting on life。其主要表现在长期摸鱼🐟，摸不同的鱼🐟，摸高质量的鱼🐟。其他表现如：结识不同成长经历和思想的人们；尝试不同的文化和生活方式；拥抱民主与自由的社会，培养更加独立的自己。 另一件是 searching for something to believe in。其主要目的是想重新获得 stay focused for long time in a row 的能力。大抵是意识到，异客想要立足他乡，还得有些本领在身。而对于 Maize 来说，这条 belief -&gt; focus -&gt; gain 的逻辑链他缺在了第一环。 About Blog Blog framework: Hexo Theme: Icarus Static Storage: Github Pages Domain and CDN: namecheap ChangelogUser Experience 优化文章页面阅读体验 页面两栏布局 整文章卡片宽度 文章目录组件悬浮 优化首页视觉体验 增加文章卡片：cover image + 简介 优化文章卡片：添加 tag 增加夜间模式 夜间模式背景星空动画 移动端夜间模式适配 Layout 设计网站 favicon 重新设计左下角页脚排版 版本号信息 站点访问统计 问候语 重新设计滚动条样式 鼠标悬浮卡片淡出效果 白天和夜间模式下首页 tag 配色更改 Function 自定义域名 Https 安全加密 Email RSS 订阅 Blog 更新 评论功能：绑定 Github Issue 文章置顶功能，即公告栏 个人 Profile 栏 主页链接 Email me CV 下载 规范文章路由 致在11.24乌鲁木齐大火中团结，站起来反抗的人们11.26 上海 乌鲁木齐中路 武汉 汉正街 云南 大理 广州 海珠广场 广州 海珠区赤沙财经大学 11.27 浙江 浙江大学文化广场 上海 上海工程技术大学 上海 上海海洋大学 广州 广州大学 北京 清华大学 紫荆园 北京 北京大学 学五食堂 北京 中央美院 北京 北京师范大学 北京 亮马桥 北京 新源里 天津 滨江道 杭州 西溪天街 成都 望平街 11.28 香港 香港大学 香港 中环 北京 海淀区苏州桥 南京 南京大学仙林校区 福建 农林大学 昆明 园西路 洛阳 上阳城 武汉 盘龙城 济南 济南大学二食堂 杭州 西湖 in77广场 海外 伦敦 大使馆 爱尔兰 都柏林 阿姆斯特丹 水坝广场 巴黎 蓬皮杜中心 巴黎 巴士底狱广场 意大利 米兰 澳大利亚悉尼 Town Hall 马来西亚 独立广场 美国密西根州 安娜堡 以上为不完全统计，时间地点与实际有出入 Maize 与你们站在一起 民主法治，表达自由 —— 清华紫荆园 不要谎言要尊严 不要文革要改革 不要领袖要选票 不做奴才做公民 —— 四通桥宣言","link":"/about/index.html"}]}